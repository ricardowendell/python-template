[project]
name = "{{cookiecutter.project_name}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12"
]

dependencies = [
    "loguru>=0.7.3",
    "python-dotenv>=1.0.1",
    "rich>=13.9.4",
]

[dependency-groups]
dev = [
    "bandit>=1.8.0",
    "commitizen>=4.1.0",
    "mypy>=1.14.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.4",
]

[project.scripts]
python-template = "python_template:main"

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["{{cookiecutter.project_slug}}"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.ruff]
target-version = "py312"
lint.select = ["E", "F", "W", "C", "B", "UP", "SIM", "I"]
line-length = 120
fix = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "--cov=src/ --cov-report=term-missing"

[tool.mypy]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
